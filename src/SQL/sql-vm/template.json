{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "nsgName": {
            "type": "string",
            "defaultValue": "nsg",
            "metadata": {
                "description": "Subnet Batch Nodes Name"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address prefix"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Subnet1",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },

        "virtualMachineName": {
            "type": "String",
            "defaultValue": "myVM",
            "metadata": {
                "description": "The name of the VM"
            }
        },
        "virtualMachineSize": {
            "type": "String",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "The virtual machine size."
            }
        },

        "imageOffer": {
            "type": "String",
            "defaultValue": "sql2019-ws2019",
            "allowedValues": [
                "sql2019-ws2019",
                "sql2017-ws2019",
                "SQL2017-WS2016",
                "SQL2016SP1-WS2016",
                "SQL2016SP2-WS2016",
                "SQL2014SP3-WS2012R2",
                "SQL2014SP2-WS2012R2"
            ],
            "metadata": {
                "description": "Windows Server and SQL Offer"
            }
        },
        "sqlSku": {
            "type": "String",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Enterprise",
                "SQLDEV",
                "Web",
                "Express"
            ],
            "metadata": {
                "description": "SQL Server Sku"
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "The admin user name of the VM"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The admin password of the VM"
            }
        },
        "storageWorkloadType": {
            "type": "String",
            "defaultValue": "General",
            "allowedValues": [
                "General",
                "OLTP",
                "DW"
            ],
            "metadata": {
                "description": "SQL Server Workload Type"
            }
        },
        "sqlDataDisksCount": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 8,
            "metadata": {
                "description": "Amount of data disks (1TB each) for SQL Data files"
            }
        },
        "dataPath": {
            "type": "String",
            "defaultValue": "F:\\SQLData",
            "metadata": {
                "description": "Path for SQL Data files. Please choose drive letter from F to Z, and other drives from A to E are reserved for system"
            }
        },
        "sqlLogDisksCount": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 8,
            "metadata": {
                "description": "Amount of data disks (1TB each) for SQL Log files"
            }
        },
        "logPath": {
            "type": "String",
            "defaultValue": "G:\\SQLLog",
            "metadata": {
                "description": "Path for SQL Log files. Please choose drive letter from F to Z and different than the one used for SQL data. Drive letter from A to E are reserved for system"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "virtualNetworkName": "[concat(uniqueString(resourceGroup().id),'virtualNetwork')]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
        "networkSecurityGroupName": "[parameters('nsgName')]",
        "networkSecurityGroupRules": [
            {
                "name": "RDP",
                "properties": {
                    "priority": 300,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "3389"
                }
            }
        ],
        "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-publicip-', uniqueString(parameters('virtualMachineName')))]",
        "publicIpAddressType": "Dynamic",
        "publicIpAddressSku": "Basic",
        "diskConfigurationType": "NEW",
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "subnetRef": "[resourceID('Microsoft.Network/virtualNetWorks/subnets', variables('virtualNetworkName'), parameters('subnet1Name'))]",
        "dataDisksLuns": "[array(range(0 ,parameters('sqlDataDisksCount')))]",
        "logDisksLuns": "[array(range(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount')))]",
        "dataDisks": {
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "storageAccountType": "Premium_LRS",
            "diskSizeGB": 1023
        },
        "tempDbPath": "D:\\SQLTemp"
    },
    "resources": [

        {
            "comments": "This NSG allows  service communication to SQL server subnet",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('nsgName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "securityRules": "[variables('networkSecurityGroupRules')]"
            }
        },

        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                }
            },
            "resources": [

                {
                    "comments": "Default subnet",
                    "type": "subnets",
                    "apiVersion": "2020-05-01",
                    "location": "[parameters('location')]",
                    "name": "[parameters('subnet1Name')]",
                    "dependsOn": [
                        "[variables('virtualNetworkName')]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    ],
                    "properties": {
                        "addressPrefix": "[parameters('subnet1Prefix')]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                        },
                        "privateEndpointNetworkPolicies": "Disabled",
                        "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                }
            ]
        },

        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-06-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            },
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            }
        },

        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[resourceID('Microsoft.Network/virtualNetWorks/subnets', variables('virtualNetworkName'), parameters('subnet1Name'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('sqlSku')]",
                        "version": "latest"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[add(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount'))]",
                            "input": {
                                "lun": "[copyIndex('dataDisks')]",
                                "createOption": "[variables('dataDisks').createOption]",
                                "caching": "[if(greaterOrEquals(copyIndex('dataDisks'), parameters('sqlDataDisksCount')) ,'None', variables('dataDisks').caching )]",
                                "writeAcceleratorEnabled": "[variables('dataDisks').writeAcceleratorEnabled]",
                                "diskSizeGB": "[variables('dataDisks').diskSizeGB]",
                                "managedDisk": {
                                    "storageAccountType": "[variables('dataDisks').storageAccountType]"
                                }
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
            "apiVersion": "2017-03-01-preview",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",
                "sqlManagement": "Full",
                "SqlServerLicenseType": "PAYG",
                "StorageConfigurationSettings": {
                    "DiskConfigurationType": "[variables('diskConfigurationType')]",
                    "StorageWorkloadType": "[parameters('storageWorkloadType')]",
                    "SQLDataSettings": {
                        "LUNs": "[variables('dataDisksLUNs')]",
                        "DefaultFilePath": "[parameters('dataPath')]"
                    },
                    "SQLLogSettings": {
                        "Luns": "[variables('logDisksLUNs')]",
                        "DefaultFilePath": "[parameters('logPath')]"
                    },
                    "SQLTempDbSettings": {
                        "DefaultFilePath": "[variables('tempDbPath')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}