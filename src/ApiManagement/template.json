{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentName_": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "The deployment target name"
      }
    },
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "internalvnet",
      "metadata": {
        "description": "Virtual Network name"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnet0Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet Prefix"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Subnet Prefix"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "Subnet Prefix"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "apim",
      "metadata": {
        "description": "Subnet Name"
      }
    },
      "subnetName0": {
      "type": "string",
      "defaultValue": "client",
      "metadata": {
        "description": "Subnet Name"
      }
    },
      "subnetName1": {
      "type": "string",
      "defaultValue": "apim",
      "metadata": {
        "description": "Subnet Name"
      }
    },
      "subnetName2": {
      "type": "string",
      "defaultValue": "backend",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "subnet0ServiceEndpoints": {
      "type": "array",
      "defaultValue": [
        {
          "service": "Microsoft.Storage"
        },
        {
          "service": "Microsoft.Sql"
        },
        {
          "service": "Microsoft.EventHub"
        }
      ],
      "metadata": {
        "description": "Service Endpoints enabled on the APIM subnet"
      }
    },
    "subnet1ServiceEndpoints": {
      "type": "array",
      "defaultValue": [
        {
          "service": "Microsoft.Storage"
        },
        {
          "service": "Microsoft.Sql"
        },
        {
          "service": "Microsoft.EventHub"
        }
      ],
      "metadata": {
        "description": "Service Endpoints enabled on the APIM subnet"
      }
    },
    "subnet2ServiceEndpoints": {
      "type": "array",
      "defaultValue": [
        {
          "service": "Microsoft.Storage"
        },
        {
          "service": "Microsoft.Sql"
        },
        {
          "service": "Microsoft.EventHub"
        }
      ],
      "metadata": {
        "description": "Service Endpoints enabled on the APIM subnet"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Region where the resources will be deployed"
      }
    },
        "publicIpSku_VM": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "SKU for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIPAllocationMethod_VM": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Allocation method for the Public IP used to access the Virtual Machine."
      }
    },
     "clientCIDR": {
      "type": "string",
      "metadata": {
        "description": "client IP for NSG"
      }
    },
     "vm0Nsg": {
      "type": "string",
      "defaultValue": "jumpbox",
      "metadata": {
        "description": "Name for"
      }
    },
    "vm0Name": {
      "type": "string",
      "defaultValue": "jumpbox",
      "metadata": {
        "description": "Name for vmName0"
      }
    },
    "vm0Size": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "Size of the virtual machine 0"
      }
    },
    "vm0AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "admin user name"
      }
    },
    "vm0AdminPassword": {
      "type": "string",
      "metadata": {
        "description": "pass"
      }
    },
    "vm0OSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Nano-Server",
        "2016-Datacenter-with-Containers",
        "2016-Datacenter",
        "2019-Datacenter",
        "2019-Datacenter-Core",
        "2019-Datacenter-Core-smalldisk",
        "2019-Datacenter-Core-with-Containers",
        "2019-Datacenter-Core-with-Containers-smalldisk",
        "2019-Datacenter-smalldisk",
        "2019-Datacenter-with-Containers",
        "2019-Datacenter-with-Containers-smalldisk"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "managedDisk_storageAccountType": {
      "type": "string",
       "metadata": {
        "description": "pass"
      }
    }
  },
  "variables": {
    "apiManagementServiceName": "[concat('apiservice', uniqueString(resourceGroup().id))]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "nsgName": "[concat('nsg-', uniqueString(resourceGroup().id),'-')]",
    "storageAccountName": "[concat(parameters('deploymentName_'),'storage',uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat(parameters('deploymentName_'),'-vnet')]",
    "subnetPreffix" : "[concat(parameters('deploymentName_'),'-subnet-')]",
    "nsgPrefix": "[concat(parameters('deploymentName_'),'-nsg-')]",
    "vmNamePreffix": "[concat(parameters('deploymentName_'),'-vm-')]",
    "publicIpPreffix" : "[concat(parameters('deploymentName_'),'-publicIp-')]",
    "publicIpLabelSuffix" : "[concat('-',uniqueString(resourceGroup().id),'-public')]",
    "nicPreffix" : "[concat(parameters('deploymentName_'),'-nic-')]"
  },
  "resources": [
    {
      "comments": "[concat('This NSG allows communication to VM ',parameters('vm0Name'))]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(variables('nsgName'),parameters('subnetName0'))]",
      "location": "[parameters('location')]",
      "apiVersion": "2020-05-01",
      "properties": {
        "securityRules": [
          {
            "name": "NSG_IN_VM_Rule",
            "properties": {
              "description": "Allows RDP Traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('clientCIDR')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Storage_NSG_Rule",
            "properties": {
              "description": "Allows Outbound Storage Traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Storage",
              "access": "Allow",
              "priority": 101,
              "direction": "Outbound"
            }
          }

        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(variables('nsgName'),parameters('subnetName1'))]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Client_communication_to_API_Management",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Secure_Client_communication_to_API_Management",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Management_endpoint_for_Azure_portal_and_Powershell",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3443",
              "sourceAddressPrefix": "ApiManagement",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "Dependency_on_Redis_Cache",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "6381-6383",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "Dependency_to_sync_Rate_Limit_Inbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4290",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 135,
              "direction": "Inbound"
            }
          },
          {
            "name": "Dependency_on_Azure_SQL",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "Sql",
              "access": "Allow",
              "priority": 140,
              "direction": "Outbound"
            }
          },
          {
            "name": "Dependency_for_Log_to_event_Hub_policy",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "5671",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "EventHub",
              "access": "Allow",
              "priority": 150,
              "direction": "Outbound"
            }
          },
          {
            "name": "Dependency_on_Redis_Cache_outbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "6381-6383",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 160,
              "direction": "Outbound"
            }
          },
          {
            "name": "Depenedency_To_sync_RateLimit_Outbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4290",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 165,
              "direction": "Outbound"
            }
          },
          {
            "name": "Dependency_on_Azure_File_Share_for_GIT",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "445",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "Storage",
              "access": "Allow",
              "priority": 170,
              "direction": "Outbound"
            }
          },
          {
            "name": "Azure_Infrastructure_Load_Balancer",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 180,
              "direction": "Inbound"
            }
          },
          {
            "name": "Publish_DiagnosticLogs_And_Metrics",
            "properties": {
              "description": "APIM Logs and Metrics for consumption by admins and your IT team are all part of the management plane",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "AzureMonitor",
              "access": "Allow",
              "priority": 185,
              "direction": "Outbound",
              "destinationPortRanges": [
                "443",
                "12000",
                "1886"
              ]
            }
          },
          {
            "name": "Connect_To_SMTP_Relay_For_SendingEmails",
            "properties": {
              "description": "APIM features the ability to generate email traffic as part of the data plane and the management plane",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 190,
              "direction": "Outbound",
              "destinationPortRanges": [
                "25",
                "587",
                "25028"
              ]
            }
          },
          {
            "name": "Authenticate_To_Azure_Active_Directory",
            "properties": {
              "description": "Connect to Azure Active Directory for Developer Portal Authentication or for Oauth2 flow during any Proxy Authentication",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "AzureActiveDirectory",
              "access": "Allow",
              "priority": 200,
              "direction": "Outbound",
              "destinationPortRanges": [
                "80",
                "443"
              ]
            }
          },
          {
            "name": "Dependency_on_Azure_Storage",
            "properties": {
              "description": "APIM service dependency on Azure Blob and Azure Table Storage",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "Storage",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "Publish_Monitoring_Logs",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "AzureCloud",
              "access": "Allow",
              "priority": 300,
              "direction": "Outbound"
            }
          },
          {
            "name": "Access_KeyVault",
            "properties": {
              "description": "Allow APIM service control plane access to KeyVault to refresh secrets",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "AzureKeyVault",
              "access": "Allow",
              "priority": 350,
              "direction": "Outbound",
              "destinationPortRanges": [
                "443"
              ]
            }
          },
          {
            "name": "Deny_All_Internet_Outbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 999,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('nsgName'),parameters('subnetName1')))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName0')]",
            "properties": {
              "addressPrefix": "[parameters('subnet0Prefix')]",
              "networkSecurityGroup": {
                 "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('nsgName'),parameters('subnetName0')))]"
              },
              "serviceEndpoints": "[parameters('subnet0ServiceEndpoints')]"
            }
          },
          {
            "name": "[parameters('subnetName1')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('nsgName'),parameters('subnetName1')))]"
              },
              "serviceEndpoints": "[parameters('subnet1ServiceEndpoints')]"
            }
          },
           {
            "name": "[parameters('subnetName2')]",
            "properties": {
              "addressPrefix": "[parameters('subnet2Prefix')]",
              "serviceEndpoints": "[parameters('subnet2ServiceEndpoints')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-12-01",
      "name": "[variables('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]",
        "virtualNetworkType": "Internal",
        "virtualNetworkConfiguration": {
          "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('subnetName1'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('publicIpPreffix'),parameters('vm0Name'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('publicIpSku_VM')]"
      },
       "dependsOn": [
            "[variables('virtualNetworkName')]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('nsgName'),parameters('subnetName0')))]"
          ],
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod_VM')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('vm0Name'),variables('publicIpLabelSuffix'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('nicPreffix'),parameters('vm0Name'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpPreffix'),parameters('vm0Name')))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName0'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
         "[variables('virtualNetworkName')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpPreffix'),parameters('vm0Name')))]"
     
      ]
    },
    {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage"
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('vmNamePreffix'),parameters('vm0Name'))]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vm0Size')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm0Name')]",
          "adminUsername": "[parameters('vm0AdminUsername')]",
          "adminPassword": "[parameters('vm0AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('vm0OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('managedDisk_storageAccountType')]"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicPreffix'),parameters('vm0Name')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('nsgName'),parameters('subnetName0')))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpPreffix'),parameters('vm0Name')))]",
        "[variables('virtualNetworkName')]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicPreffix'),parameters('vm0Name')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ]
}